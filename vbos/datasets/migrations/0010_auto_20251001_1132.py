# Generated by Django 5.2.5 on 2025-10-01 11:32
import json
from django.contrib.gis.geos.geometry import GEOSGeometry
from django.db import migrations


def read_geojson(file_path):
    with open(file_path, "r") as file:
        geojson_content = json.loads(file.read())
        return geojson_content


def import_provinces(apps, schema_editor):
    Province = apps.get_model("datasets", "Province")
    try:
        file = read_geojson("vbos/datasets/fixtures/provinces.geojson")
        provinces = file["features"]
        for i in provinces:
            Province.objects.get_or_create(
                id=i["properties"]["pid"],
                name=i["properties"]["pname"],
                geometry=GEOSGeometry(json.dumps(i["geometry"])),
            )
    except FileNotFoundError:
        print("Provinces file not found.")


def import_area_councils(apps, schema_editor):
    Province = apps.get_model("datasets", "Province")
    AreaCouncil = apps.get_model("datasets", "AreaCouncil")
    try:
        file = read_geojson("vbos/datasets/fixtures/area-councils.geojson")
        councils = file["features"]
        for i in councils:
            AreaCouncil.objects.get_or_create(
                id=i["properties"]["AC2022"],
                name=i["properties"]["ACNAME22"],
                province=Province.objects.get(id=i["properties"]["PID"]),
                geometry=GEOSGeometry(json.dumps(i["geometry"])),
            )
    except FileNotFoundError:
        print("Provinces file not found.")


class Migration(migrations.Migration):

    dependencies = [
        ("datasets", "0009_province_areacouncil"),
    ]

    operations = [
        migrations.RunPython(import_provinces, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(
            import_area_councils, reverse_code=migrations.RunPython.noop
        ),
    ]
